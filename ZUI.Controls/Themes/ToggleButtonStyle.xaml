<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
                    xmlns:ControlEx="clr-namespace:ZUI.Controls">

    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />

    <SolidColorBrush x:Key="ToggleButton.Background" Color="#FFFFFF" />
    <SolidColorBrush x:Key="ToggleButton.BorderBrush" Color="#B0B0B0" />
    <SolidColorBrush x:Key="ToggleButton.Rectangle.Fill.Left" Color="#B0B0B0" />
    <SolidColorBrush x:Key="ToggleButton.Rectangle.Fill.Right" Color="#31A4E5" />

    <Style x:Key="ToggleButtonBaseStyle" TargetType="{x:Type ControlEx:FlatToggleButton}">
        <Setter Property="Background" Value="{StaticResource ToggleButton.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource ToggleButton.BorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Width" Value="50" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ControlEx:FlatToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard1">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.667" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="25" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimation Duration="0:0:0.1" From="5" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Height"
                                             To="15" />
                            <DoubleAnimation Duration="0:0:0.1" From="2" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="RadiusX"
                                             To="15" />
                            <DoubleAnimation Duration="0:0:0.1" From="2" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="RadiusY"
                                             To="15" />
                        </Storyboard>
                        <Storyboard x:Key="ResverStoryboard">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="25" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.667" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimation Duration="0:0:0.1" From="15" Storyboard.TargetName="rectangle" 
                                             Storyboard.TargetProperty="Height" To="5" />
                            <DoubleAnimation Duration="0:0:0.1" From="15" Storyboard.TargetName="rectangle" 
                                             Storyboard.TargetProperty="RadiusX" To="3" />
                            <DoubleAnimation Duration="0:0:0.1" From="15" Storyboard.TargetName="rectangle" 
                                             Storyboard.TargetProperty="RadiusY" To="3" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border x:Name="border"
                            Width="{TemplateBinding Width}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="12" SnapsToDevicePixels="true" UseLayoutRounding="True">
                        <Grid Height="25.333" VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="rectangle" Grid.Column="0" Width="15" Height="5" VerticalAlignment="Center"
                                       Fill="{TemplateBinding UnCheckedColor}"
                                       RadiusX="3" RadiusY="3" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="True">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="Storyboard1_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="ResverStoryboard_BeginStoryboard" Storyboard="{StaticResource ResverStoryboard}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="Storyboard1_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="Storyboard1_BeginStoryboard" Storyboard="{StaticResource Storyboard1}" />
                            </Trigger.EnterActions>
                            <Setter TargetName="rectangle" Property="Fill" Value="{Binding IsCheckedColor, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ControlEx:FlatToggleButton}" BasedOn="{StaticResource ToggleButtonBaseStyle}">
        <Setter Property="IsCheckedColor" Value="#4A89DC" />
        <Setter Property="UnCheckedColor" Value="#E6E9ED" />
        <Setter Property="BorderBrush" Value="#B0B0B0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Width" Value="50" />
        <Setter Property="Height" Value="24" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>
    
    <Style x:Key="ToggleButtonWithWordBaseStyle" TargetType="{x:Type ControlEx:FlatToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Height" Value="26" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ControlEx:FlatToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard1">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="grid">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="22.011"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Hidden}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid1">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Visibility)" Storyboard.TargetName="borderChecked">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Visibility)" Storyboard.TargetName="border">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Hidden}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Visibility)" Storyboard.TargetName="textBlock">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Visibility)" Storyboard.TargetName="tbClose">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Hidden}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Storyboard2">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid1">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Visibility)" Storyboard.TargetName="borderChecked">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Hidden}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Visibility)" Storyboard.TargetName="border">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="grid1">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-22.011"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Visibility)" Storyboard.TargetName="textBlock">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Hidden}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Visibility)" Storyboard.TargetName="tbClose">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" Background="Transparent" BorderThickness="0" SnapsToDevicePixels="True">
                            <Grid>
                                <Border x:Name="borderChecked" BorderBrush="{TemplateBinding BorderBrush}" 
        								BorderThickness="{TemplateBinding BorderThickness}" 
        								Background="{TemplateBinding IsCheckedColor}" 
        								SnapsToDevicePixels="true" UseLayoutRounding="True"
        								CornerRadius="14" Margin="0,2" />
                                
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
        								BorderThickness="{TemplateBinding BorderThickness}" 
        								Background="{TemplateBinding UnCheckedColor}" 
        								SnapsToDevicePixels="true" UseLayoutRounding="True"
        								CornerRadius="14" Margin="0,2" />
                                <Grid>
                                    <Grid x:Name="grid" HorizontalAlignment="Left" RenderTransformOrigin="0.5,0.5">
                                        <Grid.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Grid.RenderTransform>
                                        <Ellipse Width="{TemplateBinding Height}"
        										 Height="{TemplateBinding Height}"
        										 Fill="#FFFFFF" VerticalAlignment="Center"
        										 HorizontalAlignment="Center"
        										 Stroke="AliceBlue" StrokeThickness="0"
                                                 SnapsToDevicePixels="True">
                                            <Ellipse.Effect>
                                                <DropShadowEffect Direction="270" ShadowDepth="2" BlurRadius="10" 
        												Color="#FFFCD3D3" Opacity="0.5" 
        												RenderingBias="Quality"/>
                                            </Ellipse.Effect>
                                        </Ellipse>

                                        <ed:Arc ArcThickness="2" ArcThicknessUnit="Pixel" EndAngle="360"
                                                Fill="{TemplateBinding UnCheckedColor}" Stretch="None" Stroke="AliceBlue"
                                                StrokeThickness="0" StartAngle="0"
                                                Width="10" Height="10"/>
                                    </Grid>
                                    <Grid x:Name="grid1" HorizontalAlignment="Right" Visibility="Collapsed" RenderTransformOrigin="0.5,0.5">
                                        <Grid.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Grid.RenderTransform>
                                        <Ellipse Width="{TemplateBinding Height}"
        										 Height="{TemplateBinding Height}"
        										 Fill="#FFFFFF" VerticalAlignment="Center"
        										 HorizontalAlignment="Center"
        										 Stroke="AliceBlue" StrokeThickness="0">
                                            <Ellipse.Effect>
                                                <DropShadowEffect Direction="270" ShadowDepth="2" BlurRadius="10" 
        												Color="#FFFCD3D3" Opacity="0.5" 
        												RenderingBias="Quality"/>
                                            </Ellipse.Effect>
                                        </Ellipse>
                                        <Rectangle Width="4" Height="15" HorizontalAlignment="Center" 
        										VerticalAlignment="Center" Fill="{TemplateBinding IsCheckedColor}"
        										RadiusX="2" RadiusY="2"/>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </Border>
                        
                        <TextBlock x:Name="textBlock" Grid.Column="1" Text="{TemplateBinding IsCheckedText}" 
                                   HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14"
                                   Foreground="#000000" Margin="10,0,5,0" />
                        
                        <TextBlock x:Name="tbClose" Grid.Column="1" Text="{TemplateBinding UnCheckedText}" HorizontalAlignment="Center"
                                   VerticalAlignment="Center" FontSize="14" Foreground="#000000" Margin="10,0,5,0"
                                   Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>-->
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="Storyboard1_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="Storyboard1_BeginStoryboard" Storyboard="{StaticResource Storyboard1}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="Storyboard2_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleButtonWithWordStyle1" TargetType="{x:Type ControlEx:FlatToggleButton}" BasedOn="{StaticResource ToggleButtonWithWordBaseStyle}">
        <Setter Property="IsCheckedText" Value="开启" />
        <Setter Property="UnCheckedText" Value="关闭" />
        <Setter Property="IsCheckedColor" Value="#4A89DC" />
        <Setter Property="UnCheckedColor" Value="#E6E9ED" />
        <Setter Property="Height" Value="26" />
        <Setter Property="Width" Value="100" />
    </Style>
</ResourceDictionary>